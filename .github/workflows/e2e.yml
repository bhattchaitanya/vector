name: E2E Suite

on:
  push:
    branches:
      - master
    paths:
      - ".github/workflows/e2e.yml"
      - "lib/**"
      - "proto/**"
      - "scripts/**"
      - "skaffold/**"
      - "src/**"
      - "tests/**"
      - "distribution/**"
      - "Cargo.lock"
      - "Cargo.toml"
      - "build.rs"
      - "docker-compose.yml"
      - "Makefile"
      - "rust-toolchain"
  pull_request: {}
  schedule:
    - cron: "0 4 * * *"

env:
  VERBOSE: true
  RUST_TEST_THREADS: 1
  TEST_LOG: vector=debug
  RUST_BACKTRACE: full
  AWS_ACCESS_KEY_ID: "dummy"
  AWS_SECRET_ACCESS_KEY: "dummy"

jobs:
  cancel-previous:
    name: Cancel redundant jobs
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

  # Github Actions don't support `matrix` at the job-level `if:` condition.
  # We apply this workaround for now: instead of using matrices, we split our
  # job in two.
  # See https://github.community/t/feature-request-and-use-case-example-to-allow-matrix-in-if-s/126067
  # TODO: merge the K8s E2E jobs and switch to job-level `if:` when the issue
  # with `matrix` usage is fixed.
  # This can also be simplified when composite actions are implemented.
  # See https://github.com/actions/runner/blob/main/docs/adrs/0549-composite-run-steps.md
  test-e2e-kubernetes-essential:
    name: K8s ${{ matrix.kubernetes_version }} / ${{ matrix.container_runtime }} (essential)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        minikube_version:
          - "v1.11.0" # https://github.com/kubernetes/minikube/issues/8799
        kubernetes_version:
          - "v1.18.6"
        container_runtime:
          - docker
          - containerd
          - crio
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Minikube
        run: scripts/ci-setup-minikube.sh
        env:
          KUBERNETES_VERSION: ${{ matrix.kubernetes_version }}
          MINIKUBE_VERSION: ${{ matrix.minikube_version }}
          CONTAINER_RUNTIME: ${{ matrix.container_runtime }}
      - run: USE_CONTAINER=none make slim-builds
      - run: make test-e2e-kubernetes
        env:
          USE_MINIKUBE_CACHE: "true"
          PACKAGE_DEB_USE_CONTAINER: docker

  test-e2e-kubernetes-extra:
    name: K8s ${{ matrix.kubernetes_version }} / ${{ matrix.container_runtime }} (extra)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        minikube_version:
          - "v1.11.0" # https://github.com/kubernetes/minikube/issues/8799
        kubernetes_version:
          - "v1.17.9"
          - "v1.16.12" # v1.16.13 is broken, see https://github.com/kubernetes/minikube/issues/8840
          - "v1.15.12"
          - "v1.14.10"
        container_runtime:
          - docker
          - containerd
          - crio
      fail-fast: false
    # See TODO above.
    if: |
      github.event.pull_request == null ||
      contains(github.event.pull_request.labels.*.name, 'ci-condition: k8s e2e all targets')
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Minikube
        run: scripts/ci-setup-minikube.sh
        env:
          KUBERNETES_VERSION: ${{ matrix.kubernetes_version }}
          MINIKUBE_VERSION: ${{ matrix.minikube_version }}
          CONTAINER_RUNTIME: ${{ matrix.container_runtime }}
      - run: USE_CONTAINER=none make slim-builds
      - run: make test-e2e-kubernetes
        env:
          USE_MINIKUBE_CACHE: "true"
          PACKAGE_DEB_USE_CONTAINER: docker
