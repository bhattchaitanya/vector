name: E2E Suite

on:
  push:
    branches:
      - master
    paths:
      - ".github/workflows/e2e.yml"
      - "lib/**"
      - "proto/**"
      - "scripts/**"
      - "skaffold/**"
      - "src/**"
      - "tests/**"
      - "distribution/**"
      - "Cargo.lock"
      - "Cargo.toml"
      - "build.rs"
      - "docker-compose.yml"
      - "Makefile"
      - "rust-toolchain"
  pull_request: {}
  schedule:
    - cron: "0 4 * * *"

env:
  VERBOSE: true
  RUST_TEST_THREADS: 1
  TEST_LOG: vector=debug
  RUST_BACKTRACE: full
  AWS_ACCESS_KEY_ID: "dummy"
  AWS_SECRET_ACCESS_KEY: "dummy"

jobs:
  cancel-previous:
    name: Cancel redundant jobs
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

  test-e2e-kubernetes:
    name: K8s ${{ matrix.kubernetes_version.version }} / ${{ matrix.container_runtime.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        minikube_version:
          - "v1.11.0" # https://github.com/kubernetes/minikube/issues/8799
        kubernetes_version:
          - version: "v1.18.6"
            is_essential: true
          - version: "v1.17.9"
          - version: "v1.16.12" # v1.16.13 is broken, see https://github.com/kubernetes/minikube/issues/8840
          - version: "v1.15.12"
          - version: "v1.14.10"
        container_runtime:
          - name: docker
            is_essential: true
          - name: containerd
            is_essential: true
          - name: crio
            is_essential: true
      fail-fast: false
    steps:
      # Github Actions don't support `matrix` at the job-level `if:` condition.
      # We apply this workaround for now.
      # See https://github.community/t/feature-request-and-use-case-example-to-allow-matrix-in-if-s/126067
      # TODO: switch to job-level `if:` when the issue with `matrix` usage is
      # fixed.
      - name: Compute the skip condition
        id: skip-condition
        if: |
          (
            matrix.kubernetes_version.is_essential &&
            matrix.container_runtime.is_essential
          ) || (
            github.event.pull_request == null ||
            contains(github.event.pull_request.labels.*.name, 'ci-condition: k8s e2e all targets')
          )
        run: "true"
      - name: Setup Minikube
        if: steps.skip-condition.conclusion == 'success'
        run: |
          set -xeuo pipefail

          curl -Lo kubectl \
            'https://storage.googleapis.com/kubernetes-release/release/${{ matrix.kubernetes_version.version }}/bin/linux/amd64/kubectl'
          sudo install kubectl /usr/local/bin/ && rm kubectl

          curl -Lo minikube \
            'https://storage.googleapis.com/minikube/releases/${{ matrix.minikube_version }}/minikube-linux-amd64'
          sudo install minikube /usr/local/bin/ && rm minikube

          minikube config set profile minikube
          minikube config set vm-driver docker
          minikube config set kubernetes-version '${{ matrix.kubernetes_version.version }}'
          minikube config set container-runtime '${{ matrix.container_runtime.name }}'
          # Start minikube, try again once if fails and print logs if the second
          # attempt fails too.
          minikube start || minikube delete && minikube start || minikube logs
          kubectl cluster-info
      - name: Checkout
        if: steps.skip-condition.conclusion == 'success'
        uses: actions/checkout@v1
      - run: USE_CONTAINER=none make slim-builds
        if: steps.skip-condition.conclusion == 'success'
      - run: make test-e2e-kubernetes
        if: steps.skip-condition.conclusion == 'success'
        env:
          USE_MINIKUBE_CACHE: "true"
          PACKAGE_DEB_USE_CONTAINER: docker
